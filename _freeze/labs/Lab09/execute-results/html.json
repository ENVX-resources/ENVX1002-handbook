{
  "hash": "f7f8227f3fb8b93f0eed05b94dfd24e4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ENVX1002 Practical Topic 9 - Describing relationships\"\nembed-resources: true\n---\n\n\n\n\n\n\n\n<br>\n\n::: callout-tip\n\n\n### Objectives\n\n* Calculate and interpret Correlation Coefficients in Excel and R\n* Produce scatterplots in Excel and R\n* Compare numerical and analytical model fitting methods in Excel\n* Fit simple linear models and obtain associated model summaries in R\n* Overlay fitted models onto scatterplots in R\n\n:::\n\n**DATA:\tENVX1002_practical_data_Regression.xlsx**\n\n\n<br>\n\n## Exercise 1: Linear Modelling in Excel\n\nThis exercise focusses on fitting the model parameters and demonstrating two ways a model can be fitted - numerical or analytical; \n\n* Analytical: equation(s) are used directly to find solution, e.g. estimate parameters that minimise residual sum of squares\n\n* Numerical: computer uses “random guesses” to find set of parameters to that minimises objective function, in this case\nresidual sum of squares\n\nWe mostly use R for modelling, but R does everything automatically. It is important to know what is going on 'behind the scenes', which is why we are starting in Excel. Similar to the tutorial, you will be calculating each component of the model parameter step by step in the exercises that follow. \n\n<br>\n\n### 1.1 Horses\n\nThis is our example of Analytical fitting method. \n\nThe number of horses on Canadian farms appeared to decrease after the war:\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\na) To see whether this is likely to be true, fit a model to the above data 'by hand' in Excel. To aid the calculation it is recommended to fill out the Excel table provided ENVX1002_practical_data_Regression.xlsx, you can find it in the spreadsheet labelled *Horses*.  \n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\na)  b0 = 4693.4 b1 = -2.40 SSxy = -24 SSxx = 10 mean(x) = 1946 mean(y) = 23 The table we have provided in Excel has broken the regression parameter equations (b0, b1) into smaller components so you can understand the underlying mechanisms and where these values come from.\n\n------------------------------------------------------------------------\n:::\n\nThe table we have provided in Excel has broken the regression parameter equations (b0, b1) into smaller components so you can understand the underlying mechanisms and where these values come from. \n\nb) Plot the two variables in Excel and fit a line. You can fit a number of models in Excel simply by right clicking on the scatter of points clicking **Add Trendline ...**.  Within the add Tendline window (see screenshot below), a number of options are given, here we want **Linear** and we want to tick **display the Equation** and **Display r-squared on the chart**.  \n\n<br>\n\n![Screenshot: Format Trendline](images/format_trendline.png)\n\n<br>\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nb)  Should be a nice plot in excel, equations should match your calculated b0 and b1\n\n------------------------------------------------------------------------\n:::\n\nThe R-squared value is a measure of how well the model fits the data where 1.0 is a perfect fit; we will discuss this more in Week 10.  The values which appear in the model equation should be the same as those obtained in your earlier calculations.  \n\nc) Although it is important for the model equation, do you think the intercept provides a realistic value in this particular case? What does it mean?\n\nc)  Although it is important for the model equation, do you think the intercept provides a realistic value in this particular case? What does it mean?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nc)  The intercept is 4693, suggesting at the year zero, Canadian farms had 4693 horses. Other than to obtain an intercept, it does not make sense to extrapolate beyond the years we have data for.\n\n------------------------------------------------------------------------\n:::\n\nd) Calculate the correlation coefficient using the **=CORREL** function in Excel. Type **=CORREL(** and highlight the **Year** column, and then after a comma highlight the **Horses** column and close the brackets. \n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nd)  r = -0.979795897, meaning there is a strong relationship in the negative direction; i.e. as the years increase, the number of horses have decreased.\n\n------------------------------------------------------------------------\n:::\n\ne) If the relationship was non-linear would this would be a good statistic to use to describe the relationship between horse and years? Explain your answer. \n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\ne)  The Pearson correlation coefficient is only useful for describing linear relationships. Based on the limited sample size we have, the scatterplot looks like a linear relationship, and so it would be ok to use the correlation coefficient in this case.\n\n------------------------------------------------------------------------\n:::\n\n<br>\n\n### 1.2 Fertiliser data\n\nThis is our example of numerical fitting of a model. \n\nFigure 1 shows a plot of yield against fertiliser where a linear model is fitted through the scatterplot of raw observations.  Intuitively you would draw this as a line that comes as close to possible to all observations which you may have come across as a ‘line of best fit’.  In this exercise we will explore how models can be fitted automatically based on least-squares estimation.\n\n<br>\n\n![Figure 1: Plot of Yield-response to fertiliser](images/Practical_Topic9_yieldfert.jpg)\n\n<br> \n\nIn Figure 1 you will notice that the line does not fit the data perfectly which is typical of biological and environmental data.  A measure of how far the model is from the data is the residual.\n\n\n\\begin{equation} \nresidual = y_i - \\hat{y}_1 \n\\label{1}\n\\end{equation}\n\nWhere $y_i$ is the observed value for the ith observation and $\\hat{y}_1$ is the predicted value for the *i*th observation.  In this case the predicted value is based on the linear model.\n\nIf we add up the square of the residuals for the n observations we get something called the Residual Sum of Squares ($SS_{res}$):\n\n\\begin{equation}\nSS_{res} =\\sum_{i = 1}^{n} (y - \\hat{y})^2 \\label{2} \n\\end{equation}\n\nThe best fitting model will have the smallest RSS.  The general method is called least-squared estimation.  We will now use Excel to find the optimal model.\n\nEnter values of 2 for the y-intercept ($b_0$) and 3 for the slope ($b_1$) in cells H2:H3.  These are the initial guess values.  \n\nb)\tNow use these parameter values to create predictions for each value of fertiliser in the Predicted column. \n\nMake sure that rather than writing in the value '2' and '3' for your predicted column, you refer to cells H2 and H3 (write as $H$2 and $H$3, see screenshot below).  Once you have completed the equation, you can apply the equation to the other rows by clicking on the small box at the bottom right corner of the cell and drag it down the rows.   Writing dollar signs into your references to H2 and H3 prevents your equation from moving down the row column. \n\n<br>\n\n![Screenshot of Predicted column input](images/pred_eqtn.png)\n\n<br>\n\nc)\tUse this information to calculate (i) residuals (ii) residuals^2^ (iii) RSS.\n\nd)\tCreate a plot similar to Figure 1 where the observations are plotted as symbols and the model predictions are a line.  You should have your spreadsheet set up so that if you change the values of the parameters the plotted line changes as well.  Try to fit the line manually.  This can be difficult, especially for non-linear models.\n\ne)\tFollow instructions provided in the Tutorial, or in the file [How to install Solver](https://canvas.sydney.edu.au/files/23533099/download?download_frd=1) to ensure you have Solver ready to use in Excel. \n\nOnce you have added Solver, click on the tab **Data >> Solver**, and you will see the following (see screenshot below). For **Set Objective**, you need to select the cell where your RSS value has been calculated. We wish to minimize this so we click on Min, and we do this by Changing Cells where the parameters of the model are found, in this case the y-intercept and slope. Before clicking **Solve**, make sure you can see your calculated values so you can see how your how it all changes.  \n\n<br>\n\n![Screenshot of solver with input values](images/solver.png)\n\n<br>\n\nWhen ready, click on **Solve** and it should find a solution for the minimum RSS.  Solver uses an iterative procedure to find the minimum RSS which means it successively guesses values until it finds the optimal value.  This is a numerical solution to the problem of model fitting.  \n\nYour 'SOLVED' parameters should be the same as what appears in your trendline equation. \n\n\n<br>\n\n## Exercise 2: Fitting a model in R\n\nNow we have a deeper understanding of what is going on behind the scenes, we can fit linear models in R. \n\nBefore you begin, ensure you have a project set up in your desired folder. Then open up a fresh R markdown and save the file within this folder.\n\nDon't forget to save as you go!\n\n<br>\n\n### 2.1 Have a go - Fertiliser data\n\nYou will use the fertiliser data to fit a linear model in R. As we covered fitting linear models in the Tutorial, it is now your turn to have a go at fitting the models (with some hints along the way). \n\na) Read the following code into R:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# add the data to R Studio\nfert <- c(0, 1, 2, 3, 4, 5)\nyield <- c(2, 13, 19, 18, 25, 33)\n```\n:::\n\n\n\n\n\nb) To visually identify any trends or relationships, create a scatterplot of fertiliser vs yield. From the scatterplot you see, are there any relationships or trends evident?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a scatterplot\nplot(fert, yield)\n```\n:::\n\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nb)  The points in the scatterplot are showing a linear trend, increasing towards the top-right corner of the plot area.\n\n------------------------------------------------------------------------\n:::\n\nc) To numerically determine whether there is a relationship, calculate the correlation coefficient. (assume data is normally distributed). Does the correlation coefficient indicate a relationship between fertiliser and yield?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# To calculate the correlation coefficient:\ncor(fert, yield)\n```\n:::\n\n\n\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nc)  The correlation coefficient is 0.964, indicating there is a strong relationship in the positive direction; i.e. as more fertiliser is applied, the yield increases.\n\n------------------------------------------------------------------------\n:::\n\nd) You can now fit the model in R using the `lm()` function. Remember to tell R the name of the object you want to store it as (in this case, `model.lm <-`), then state the name of the function. The arguments within the function (i.e. between the brackets) will be `yield ~ fert`, with `yield` being the response variable and `fert` being the predictor. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run your model\n## yield = response variable (x)\n## fert = predictor variable (y)\nmodel.lm <- lm(yield ~ fert)\n\n# Obtain model summary - In here you can obtain the model parameters\n# Look for Intercept Estimate and fert Estimate\nsummary(model.lm)\n```\n:::\n\n\n\n\ne) In the model output obtained from `summary(model.lm)` the model parameters will be listed under 'Estimate' for the intercept and 'fert'. Compare these values to what you have calculated in Excel. \n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\ne)  Intercept = 4.7619 = $b_0$ fert = 5.4286 = $b_1$ These coefficients should be the same as those calculated in Excel.\n\n------------------------------------------------------------------------\n:::\n\nf) Based on this output, what would the model equation be? Does it match your findings in Excel?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nf)  Substituting in parameters from R output:\n\n$$\nYield = 4.7619 + 5.4286fert\n$$\n\nThis should be the same as the equation obtained in Excel\n\n------------------------------------------------------------------------\n:::\n\ng) You can now fit your model to the scatterplot you created previously using the `abline()` function. Make sure you run the plot function and the abline function in one go. If the lines are run separately, an error may appear saying \"plot.new hasn't been called yet\"; this is because the abline function requires a current plot on which it can overlay the line. \n\nAlso remember, when presenting plots (e.g. in a report), they should be able to stand alone and be self-explanatory. We therefore need to make sure there are clear axis labels. This can be done using 'xlab' and 'ylab' arguments. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add the linear model to your scatterplot\nplot(fert, yield, xlab = \"fertiliser applied\", ylab = \"Yield\")\nabline(model.lm, col = \"red\")\n```\n:::\n\n\n\n\n<br>\n\n### 2.2 ABARES data \n\nIn this final example we will be using a dataset obtained from the Australian Bureau of Agricultural and Resource Economics and Sciences  ([ABARES](https://www.agriculture.gov.au/abares)). The dataset provides a measure of productivity growth (TFP; Total Factor Productivity) in the Australian dairy industry from the years 1978 to 2018.    \n\nMore information about the ABARES dataset and productivity can be found [here](https://www.agriculture.gov.au/abares/research-topics/productivity/agricultural-productivity-estimates#dairy ).\n\na) Read in the data from the Excel file for today's practical. \n\nBecause we have such a large dataset this time, it is better to read the data straight from Excel than read in each individual value. Reading straight from the source file in Excel saves time and reduces chance of input error. \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\n\nABARES <- read_excel(\"data/ENVX1002_practical_data_Regression.xlsx\", sheet = \"ABARES\")\n```\n:::\n\n\n\n\nb) Create a scatterplot of `Year` against `TFP`. Dont forget the format will be different now - instead of only mentioning the object name, e.g. plot(yield, fert), you will need to refer to the specific columns within the ABARES dataset. (i.e. ABARES$Year).\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ABARES$Year, ABARES$TFP)\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n:::\n\nc) Can you see a trend between TFP and Year? Or are the points evenly scattered?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nc)  There seems to be an overall positive trend in the plot\n\n------------------------------------------------------------------------\n:::\n\nd) Calculate the correlation coefficient between these two variables. Is there a strong relationship?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(ABARES$Year, ABARES$TFP)\n```\n:::\n\n\n\n\nd)  The correlation coefficient is 0.917, indicating a strong relationship in the positive direction. This means there has been positive growth in the dairy industry over time.\n\n------------------------------------------------------------------------\n:::\n\ne) Fit a model to your data and obtain the model summary. Year will be our predictor and TFP will be our response variable. What are the model parameters (i.e. $b_0$ and $b_1$)?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nabares.lm <- lm(ABARES$TFP ~ ABARES$Year)\n\n# Alternative structure: abares.lm <- lm(TFP ~ Year data = ABARES)\n\nsummary(abares.lm)\n```\n:::\n\n\n\n\ne)  Based on the model summary output, our parameters are:\n\n$b_0$ = -2998.0129 $b_1$ = 1.5632\n:::\n\nf) What would the equation for this model be?\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\nf)  Use the coefficients from above and substitute into lm equation:\n\n$$\nTFI = -2998.0 + 1.5632Year\n$$\n\n------------------------------------------------------------------------\n:::\n\ng) Overlay your model onto the scatterplot you produced earlier. When plotting make sure you refer to the column names as you did for the model (e.g. ABARES$Year).\n\n::: {.content-visible when-profile=\"solution\"}\n### Solution {style=\"color:green;\"}\n\n------------------------------------------------------------------------\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(ABARES$Year, ABARES$TFP, xlab = \"Year\", ylab = \"Total factor productivity of Dairy (TFP)\")\nabline(abares.lm, col = \"red\")\n```\n:::\n\n\n\n\n------------------------------------------------------------------------\n:::\n\n<br>\n\nThat's it! Great work today. Next week: interpreting linear models!\n\n<br>\n<br>\n<!--The code below reduces white space at the end of the output doc-->\n<div class=\"tocify-extend-page\" data-unique=\"tocify-extend-page\" style=\"height: 0;\"></div>",
    "supporting": [
      "Lab09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}